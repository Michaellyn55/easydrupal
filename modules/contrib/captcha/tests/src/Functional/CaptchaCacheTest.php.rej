--- tests/src/Functional/CaptchaCacheTest.php
+++ tests/src/Functional/CaptchaCacheTest.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\Tests\captcha\Functional;
 
+use Drupal\Core\Database\Database;
+
 /**
  * Tests CAPTCHA caching on various pages.
  *
@@ -14,7 +16,11 @@ class CaptchaCacheTest extends CaptchaWebTestBase {
    *
    * @var array
    */
-  public static $modules = ['block', 'image_captcha'];
+  public static $modules = [
+    'block',
+    'image_captcha',
+    'captcha_test',
+  ];
 
   /**
    * {@inheritdoc}
@@ -69,4 +75,44 @@ class CaptchaCacheTest extends CaptchaWebTestBase {
     $this->assertResponse(200);
   }
 
+  /**
+   * Tests a cacheable captcha type.
+   */
+  public function testCacheableCaptcha() {
+    $web_assert = $this->assertSession();
+
+    // Enable captcha on login block with a cacheable captcha.
+    captcha_set_form_id_setting('user_login_form', 'captcha_test/TestCacheable');
+
+    $this->drupalGet('');
+    $this->assertTrue($this->drupalGetHeader('x-drupal-cache'), 'Cache enabled');
+
+    $edit = [
+      'name' => $this->normalUser->getDisplayName(),
+      'pass' => $this->normalUser->pass_raw,
+      'captcha_response' => 'Test 123',
+    ];
+    $this->drupalPostForm(NULL, $edit, t('Log in'));
+    $web_assert->addressEquals('user/' . $this->normalUser->id());
+
+    // Simulate a cron run that deletes the {captcha_session} data.
+    $connection = Database::getConnection();
+    $connection->delete('captcha_sessions')->execute();
+
+    // Log out and reload the form. Because the captcha is cacheable, the form
+    // is retrieved from the render cache, and contains the same CSID as
+    // previously.
+    $this->drupalLogout();
+    $this->drupalGet('');
+    $this->assertTrue($this->drupalGetHeader('x-drupal-cache'), 'Cache enabled');
+
+    $edit = [
+      'name' => $this->normalUser->getDisplayName(),
+      'pass' => $this->normalUser->pass_raw,
+      'captcha_response' => 'Test 123',
+    ];
+    $this->drupalPostForm(NULL, $edit, t('Log in'));
+    $web_assert->addressEquals('user/' . $this->normalUser->id());
+  }
+
 }
