<?php

/**
 * @file
 * Update scripts for the Schema Metatag module.
 */

use Drupal\metatag\Entity\MetatagDefaults;

/**
 * Implementions of hook_update_N().
 */

/**
 * Rename aggregate_rating tags.
 *
 * The "MODULE_aggregate_rating" meta tag is renamed to "MODULE_rating".
 */
function schema_metatag_update_8101() {
  /* @var $configs Drupal\metatag\Entity\MetatagDefaults */
  $configs = MetatagDefaults::loadMultiple();

  foreach ($configs as $config) {
    $changed = FALSE;
    $tags = $config->get('tags');
    foreach ($tags as $tag_name => $tag) {
      if (strpos($tag_name, '_aggregate_rating') !== FALSE) {
        $new_name = str_replace('_aggregate_rating', '_rating', $tag_name);
        $tags[$new_name] = $tags[$tag_name];
        unset($tags[$tag_name]);
        $changed = TRUE;
      }
    }
    if ($changed) {
      $config->set("tags", $tags);
      $config->save();
    }
  }
}

/**
 * Warning about deprecation of the Schema.org VotingAPI module.
 */
function schema_metatag_update_8102() {
  return (string) t("The Schema.org VotingAPI module has been deprecated and will be removed in a future release. Please uninstall it.");
}

/**
 * Rename aggregate_rating tags again.
 *
 * The "MODULE_rating" meta tag is renamed to "MODULE_aggregate_rating" and
 * review:rating should be review:reviewRating.
 */
function schema_metatag_update_8103() {
  /* @var $configs Drupal\metatag\Entity\MetatagDefaults */
  $configs = MetatagDefaults::loadMultiple();

  foreach ($configs as $config) {
    $changed = FALSE;
    $tags = $config->get('tags');
    foreach ($tags as $tag_name => $tag) {
      if ($tag_name == 'schema_review_rating') {
        $tags['schema_review_review_rating'] = $tags['schema_review_rating'];
        unset($tags['schema_review_rating']);
        $changed = TRUE;
      }
      elseif (strpos($tag_name, '_rating') !== FALSE) {
        $new_name = str_replace('_rating', '_aggregate_rating', $tag_name);
        $tags[$new_name] = $tags[$tag_name];
        unset($tags[$tag_name]);
        $changed = TRUE;
      }
    }
    if ($changed) {
      $config->set("tags", $tags);
      $config->save();
    }
  }
}

/**
 * Uninstall the deprecated SchemaVotingAPI and SchemaProgramMembership modules.
 */
function schema_metatag_update_8104(&$sandbox) {
  \Drupal::service('module_installer')->uninstall(['schema_votingapi', 'schema_program_membership']);
  return (string) t("The Schema.org ProgramMembership and Schema.org VotingAPI modules have been deprecated and will be removed in a future release. They have been uninstalled");

}

